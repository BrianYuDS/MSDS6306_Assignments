## Question 2
DT[order(RANKING, decreasing=TRUE), list(COUNTRYCODE, LONG.NAME.x, LONG.NAME.y, RANKING, GDP)][13]
# From sorting the data frame in ascending order by GDP, the 13th country in the resulting
# data frame is St. Kitts and Nevis
## Question 3
DT[, mean(RANKING, na.rm = TRUE), by = INCOME.GROUP]
View(DT)
View(GDP)
View(GDPclean)
nrow(DT$RANKING)
nrow(!is.na(DT$RANKING))
DT[order(RANKING, decreasing=TRUE), list(COUNTRYCODE, LONG.NAME.x, LONG.NAME.y, RANKING, GDP)][13]
library(xlsx)
install.packages("xlsx")
library(xlsx)
## Downloading GDP data
site <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(site, destfile = "./getdata%2Fdata%2FGDP.csv")
list.files()
GDP <- read.csv("getdata%2Fdata%2FGDP.csv")
View(GDP)
## Missing blanks for column headers
## Row 234 - 240 contain comments that I deem unnecessary for analysis
## In addition, Row 236 and beyong contains NA
## Clean and tidy up GDP data frame
## Exclude rows with comments from raw data frame and rows with blanks and NAs
GDPclean <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232))
GDPclean <- GDPclean[X != ""]
## Tidy columns to include columns of interest
GDPclean <- GDPclean[, list(X, X.1, X.3, X.4)]
## Add column names
names(GDPclean) <- c("CountryCode", "ranking", "Long.Name", "GDP")
# Change all the variable names to upper case
names(GDPclean) <- toupper(names(GDPclean))
# Change COUNTRYCODE & LONG.NAME from factor to character
GDPclean$COUNTRYCODE <- as.character(GDPclean$COUNTRYCODE)
GDPclean$LONG.NAME<- as.character(GDPclean$LONG.NAME)
# Change GDP from factor to numeric
GDPclean$GDP <- as.numeric(GDPclean$GDP)
str(GDPclean)
# Count number of missing values for RANKING variable
GDPclean$RANKING <- as.numeric(GDPclean$RANKING)
missingRanking <- sum(is.na(GDPclean$RANKING))
missingRanking
## Downloading Educational Data
site <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(site, destfile = "./getdata%2Fdata%2FEDSTATS_Country.csv")
list.files()
Educational <- read.csv("getdata%2Fdata%2FEDSTATS_Country.csv")
str(Educational)
## Clean and tidy up GDP data frame
## Exclude rows with comments from raw data frame and rows with blanks and NAs
Educationalclean <- data.table(Educational)
## Change all variable names to upper case
names(Educationalclean) <- toupper(names(Educationalclean))
# Change COUNTRYCODE & LONG.NAME from factor to character
Educationalclean$COUNTRYCODE <- as.character(Educationalclean$COUNTRYCODE)
Educationalclean$LONG.NAME<- as.character(Educationalclean$LONG.NAME)
# Change GDP from factor to numeric
str(Educationalclean)
write.xlsx(MergedData, "C:/Users/Brian/Desktop")
MergedData <- merge(GDPclean, Educationalclean, all = TRUE, by=c("COUNTRYCODE"))
install.packages("xlsx")
library(xlsx)
write.xlsx(MergedData, "C:/Users/Brian/Desktop")
write.xlsx(MergedData, "C:/Users/Brian/Desktop/MergedData.xlsx")
write.table(MergedData, "C:/Users/Brian/Desktop/MergedData.csv")
write.table(MergedData, "C:/Users/Brian/Desktop/MergedData.csv", sep = "\t")
write.table(MergedData, "C:/Users/Brian/Desktop/MergedData.csv", sep = " ")
write.table(MergedData, "C:/Users/Brian/Desktop/MergedData.csv", sep = " ")
write.table(MergedData, "C:/Users/Brian/Desktop/MergedData.csv", sep = "")
write.table(MergedData, "C:/Users/Brian/Desktop/MergedData.csv", sep = "\t")
write.csv(MergedData, "C:/Users/Brian/Desktop/MergedData.csv", sep = "\t")
write.csv(MergedData, "C:/Users/Brian/Desktop/MergedData.csv")
MergedData[order(RANKING, decreasing=FALSE), list(COUNTRYCODE, LONG.NAME.x, LONG.NAME.y, RANKING, GDP)][13]
MergedData[order(RANKING, decreasing=TRUE), list(COUNTRYCODE, LONG.NAME.x, LONG.NAME.y, RANKING, GDP)][13]
MergedData[order(RANKING, decreasing=TRUE), list(COUNTRYCODE, LONG.NAME.x, RANKING, GDP)][13]
MergedData[order(RANKING, decreasing=TRUE), list(COUNTRYCODE, LONG.NAME.x, RANKING)][13]
View(MergedData)
library(ggplot2)
ggplot(MergedData, aes(x=RANKING,y=GDP))  +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
MergedData[order(GDP)]
ggplot(MergedData, aes(x=RANKING,y=GDP))  +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
MergedData[order(GDP)]
View(MergedData)
MergedData[order(GDP, decreasing = TRUE)]
View(MergedData)
MergedData2 <- MergedData[order(GDP)]
View(MergedData2)
ggplot(MergedData2, aes(x=RANKING,y=GDP))  +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
ggplot(MergedData2, aes(x=RANKING,y=GDP))  +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
MergedData2 <- MergedData[order(GDP, RANKING)]
ggplot(na.omite(MergedData2), aes(x=RANKING,y=GDP))  +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
geom_point(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
ggplot(na.omite(MergedData2), aes(x=RANKING,y=GDP))  +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
ggplot(na.omit(MergedData2), aes(x=RANKING,y=GDP))  +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
View(GDP)
View(Educationalclean)
View(GDPclean)
## Downloading GDP data
site <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(site, destfile = "./getdata%2Fdata%2FGDP.csv")
list.files()
GDP <- read.csv("getdata%2Fdata%2FGDP.csv")
View(GDP)
GDPclean <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232))
View(GDPclean)
str(GDPclean)
GDPclean <- GDPclean[, list(X, X.1, X.3, X.4)]
str(GDPclean)
names(GDPclean) <- c("CountryCode", "ranking", "Long.Name", "GDP")
names(GDPclean) <- toupper(names(GDPclean))
str(GDPclean)
GDPclean$GDP <- as.numeric(GDPclean$GDP)
str(GDPclean)
site <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(site, destfile = "./getdata%2Fdata%2FGDP.csv")
list.files()
GDP <- read.csv("getdata%2Fdata%2FGDP.csv")
View(GDP)
GDPclean <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232))
GDPclean <- GDPclean[X != ""]
GDPclean <- GDPclean[, list(X, X.1, X.3, X.4)]
names(GDPclean) <- c("CountryCode", "ranking", "Long.Name", "GDP")
names(GDPclean) <- toupper(names(GDPclean))
str(GDPclean)
as.numeric(GDPclean$GDP)
site <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(site, destfile = "./getdata%2Fdata%2FGDP.csv")
list.files()
GDP <- read.csv("getdata%2Fdata%2FGDP.csv")
View(GDP)
## Missing blanks for column headers
## Row 234 - 240 contain comments that I deem unnecessary for analysis
## In addition, Row 236 and beyong contains NA
## Clean and tidy up GDP data frame
## Exclude rows with comments from raw data frame and rows with blanks and NAs
GDPclean <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232))
GDPclean <- GDPclean[X != ""]
## Tidy columns to include columns of interest
GDPclean <- GDPclean[, list(X, X.1, X.3, X.4)]
## Add column names
names(GDPclean) <- c("CountryCode", "ranking", "Long.Name", "GDP")
# Change all the variable names to upper case
names(GDPclean) <- toupper(names(GDPclean))
str(GDPclean)
GDPclean$COUNTRYCODE <- as.character(GDPclean$COUNTRYCODE)
GDPclean$LONG.NAME<- as.character(GDPclean$LONG.NAME)
# Change GDP from factor to numeric
#GDPclean$GDP <- as.numeric(GDPclean$GDP)
as.numeric(paste(GDPclean$GDP))
str(GDPclean)
GDPclean$RANKING <- as.numeric(GDPclean$RANKING)
missingRanking <- sum(is.na(GDPclean$RANKING))
missingRanking
site <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(site, destfile = "./getdata%2Fdata%2FEDSTATS_Country.csv")
list.files()
Educational <- read.csv("getdata%2Fdata%2FEDSTATS_Country.csv")
str(Educational)
## Exclude rows with comments from raw data frame and rows with blanks and NAs
Educationalclean <- data.table(Educational)
## Change all variable names to upper case
names(Educationalclean) <- toupper(names(Educationalclean))
# Change COUNTRYCODE & LONG.NAME from factor to character
Educationalclean$COUNTRYCODE <- as.character(Educationalclean$COUNTRYCODE)
Educationalclean$LONG.NAME<- as.character(Educationalclean$LONG.NAME)
# Change GDP from factor to numeric
str(Educationalclean)
MergedData <- merge(GDPclean, Educationalclean, all = TRUE, by=c("COUNTRYCODE"))
sum(!is.na(unique(MergedData$RANKING)))
MergedData[order(RANKING, decreasing=TRUE), list(COUNTRYCODE, LONG.NAME.x, RANKING)][13]
MergedData[, mean(RANKING, na.rm = TRUE), by = INCOME.GROUP]
MergedData2 <- MergedData[order(GDP, RANKING)]
ggplot(na.omit(MergedData2), aes(x=RANKING,y=GDP))  +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
ggplot(MergedData2, aes(x=RANKING,y=GDP))  +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
as.numeric(as.character(GPDclean$GDP))
as.numeric(as.character(GDPclean$GDP))
class(GDPclean$GDP)
as.character(GDPclean$GDP)
A <- as.character(GDPclean$GDP)
class(A)
as.numeric(A)
site <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(site, destfile = "./getdata%2Fdata%2FGDP.csv")
list.files()
GDP <- read.csv("getdata%2Fdata%2FGDP.csv")
View(GDP)
## Missing blanks for column headers
## Row 234 - 240 contain comments that I deem unnecessary for analysis
## In addition, Row 236 and beyong contains NA
## Clean and tidy up GDP data frame
## Exclude rows with comments from raw data frame and rows with blanks and NAs
GDPclean <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232))
GDPclean <- GDPclean[X != ""]
## Tidy columns to include columns of interest
GDPclean <- GDPclean[, list(X, X.1, X.3, X.4)]
## Add column names
names(GDPclean) <- c("CountryCode", "ranking", "Long.Name", "GDP")
# Change all the variable names to upper case
names(GDPclean) <- toupper(names(GDPclean))
GDPclean$COUNTRYCODE <- as.character(GDPclean$COUNTRYCODE)
GDPclean$LONG.NAME<- as.character(GDPclean$LONG.NAME)
# Change GDP from factor to numeric
#GDPclean$GDP <- as.numeric(GDPclean$GDP)
#as.numeric(paste(GDPclean$GDP))
as.numeric(levels(GDPclean$GDP))
as.numeric(levels(GDPclean$GDP))[GDPclean$GDP]
class(GDPclean$GDP)
as.numeric(levels(GDPclean$GDP))[GDPclean$GDP]
GDPclean$GDP <-as.numeric(gsub,",","",GDPclean$GDP)
site <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(site, destfile = "./getdata%2Fdata%2FGDP.csv")
list.files()
GDP <- read.csv("getdata%2Fdata%2FGDP.csv", stringsAsFactors = FALSE)
View(GDP)
GDPclean <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232))
GDPclean <- GDPclean[X != ""]
GDPclean <- GDPclean[, list(X, X.1, X.3, X.4)]
names(GDPclean) <- c("CountryCode", "ranking", "Long.Name", "GDP")
names(GDPclean) <- toupper(names(GDPclean))
str(GDPclean)
site <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(site, destfile = "./getdata%2Fdata%2FGDP.csv")
list.files()
GDP <- read.csv("getdata%2Fdata%2FGDP.csv", stringsAsFactors = FALSE)
str(GDP)
GDPclean <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", stringAsFactors = FALSE, skip = 4, nrows = 232))
GDPclean <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232), stringAsFactors = FALSE)
str(GDPclean)
GDPclean <- read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232, stringAsFactors = FALSE)
GDP <- read.csv("getdata%2Fdata%2FGDP.csv", stringsAsFactors = FALSE)
GDPclean <- read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232, stringAsFactors = FALSE)
str(GDP)
GDP <- read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232, stringAsFactors = FALSE)
## Downloading GDP data
site <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(site, destfile = "./getdata%2Fdata%2FGDP.csv")
list.files()
GDP <- read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232, stringAsFactors = FALSE)
download.file(site, destfile = "./getdata%2Fdata%2FGDP.csv")
GDP <- read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232, stringAsFactors = FALSE)
download.file(gdpsite, gdpFile)
gdpsite <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
gdpFile <- tempfile()
download.file(gdpsite, gdpFile)
GDPData <- read.csv(gdpFile, skip = 4, nrows = 232, stringAsFactors = FALSE)
GDPData <- read.csv(gdpFile, skip = 4, nrows = 232, stringAsFactors = F)
GDPData <- read.csv(gdpFile, skip = 4, nrows = 232, stringAsFactors = F, header = F)
GDPData <- read.csv(gdpFile, stringAsFactors = F)
gdpFile <- tempfile()
download.file(gdpsite, gdpFile)
GDPData <- read.table(gdpFile, stringAsFactors = F)
download.file(gdpsite, destfile = "./getdata%2Fdata%2FGDP.csv")
GDPData <- read.TA(gdpFile, stringAsFactors = F)
GDPData <- read.csv("getdata%2Fdata%2FGDP.csv"", stringAsFactors = F)
GDPData <- read.csv("getdata%2Fdata%2FGDP.csv")
gdpsite <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdpsite, destfile = "./getdata%2Fdata%2FGDP.csv")
GDPData <- read.csv("getdata%2Fdata%2FGDP.csv")
GDP <- read.csv("getdata%2Fdata%2FGDP.csv")
gdpsite <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdpsite, destfile = "./getdata%2Fdata%2FGDP.csv")
GDP <- read.csv("getdata%2Fdata%2FGDP.csv", stringsAsFactors = F)
str(GDP)
GDP <- read.csv("getdata%2Fdata%2FGDP.csv", stringsAsFactors = F, skip = 4, nrows = 232)
str(GDP)
gdpsite <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdpsite, destfile = "./getdata%2Fdata%2FGDP.csv")
GDP <- read.csv("getdata%2Fdata%2FGDP.csv", stringsAsFactors = F)
GDPclean <- read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232, stringAsFactors = FALSE)
GDPclean <- read.csv("getdata%2Fdata%2FGDP.csv", stringAsFactors = FALSE, skip = 4, nrows = 232, )
GDP <- read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232, stringsAsFactors = F)
GDPclean <- GDP
GDPclean <- GDPclean[X != ""]
View(GDP)
GDPdata <- GDPdata[, c[1, 2, 4, 5]]
gdpsite <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdpsite, destfile = "./getdata%2Fdata%2FGDP.csv")
GDPdata <- read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232, stringsAsFactors = F)
GDPdata <- GDPdata[, c[1, 2, 4, 5]]
str(GDPdata)
GDPdata <- data.table(GDP.data)
GDPdata <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", stringAsFactors = FALSE, skip = 4, nrows = 232, ))
gdpsite <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdpsite, destfile = "./getdata%2Fdata%2FGDP.csv")
GDPdata <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", stringAsFactors = FALSE, skip = 4, nrows = 232, ))
gdpsite <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdpsite, destfile = "./getdata%2Fdata%2FGDP.csv")
GDPdata <- read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232, stringsAsFactors = F)
GDPdata <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232, stringsAsFactors = F))
GDPdata <- GDPdata[, c[1, 2, 4, 5]]
GDPdataClean <- GDPdata[X!=""]
GDPdata <- GDP[, list(x, x.1, x.3, x.4)]
GDPdataClean <- GDPdataClean[, c[1, 2, 4, 5]]
GDPdata <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232, stringsAsFactors = F))
GDPdata <- GDPdata[X!=""]
GDPdata <- GDPdata[, c[1, 2, 4, 5]]
GDPdata <- GDPdata[, list(x, x.1, x.3, x.4)]
GDPdata <- GDPdata[, list(X, X.1, X.3, X.4)]
str(GDPdata)
names(GDPdata) <- c("CountryCode", "ranking", "Long.Name", "GDP")
str(GDPdata)
View(GDPdata)
GDPdata$GDP <- as.numeric(gsub(",","", GDPdata$GDP))
View(GDPdata)
str(GDPdata)
## Downloading GDP data
gdpsite <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
GDPdata <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232, stringsAsFactors = F))
GDPdata <- GDPdata[X!=""]
GDPdata <- GDPdata[, list(X, X.1, X.3, X.4)]
names(GDPdata) <- c("CountryCode", "ranking", "Long.Name", "GDP.Value")
str(GDPdata)
GDPdata$GDP <- as.numeric(gsub(",","", GDPdata$GDP))
str(GDPdata)
names(GDPdata) <- toupper(names(GDPdata))
str(GDPdata)
GDPdata$RANKING <- as.numeric(GDPdata$RANKING)
missingRanking <- sum(is.na(GDPclean$RANKING))
missingRanking <- sum(is.na(GDPdata$RANKING))
missingRanking
View(GDPdata)
site <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(site, destfile = "./getdata%2Fdata%2FEDSTATS_Country.csv")
Educationaldata <- data.table(read.csv("getdata%2Fdata%2FEDSTATS_Country.csv", stringAsFactors = F))
Educationaldata <- data.table(read.csv("getdata%2Fdata%2FEDSTATS_Country.csv", stringAsFactors = F))
Educationaldata <- read.csv("getdata%2Fdata%2FEDSTATS_Country.csv")
str(Educationaldata)
Educationalclean <- data.table(Educational)
names(Educationalclean) <- toupper(names(Educationalclean))
clean
Educationalclean <- data.table(Educationaldata)
names(Educationalclean) <- toupper(names(Educationalclean))
Educationalclean$COUNTRYCODE <- as.character(Educationalclean$COUNTRYCODE)
Educationalclean$LONG.NAME<- as.character(Educationalclean$LONG.NAME)
# Change GDP from factor to numeric
MergedData <- merge(GDPdata, Educationalclean, all = TRUE, by=c("COUNTRYCODE"))
sum(!is.na(unique(MergedData$RANKING)))
View(MergedData)
MergedData[order(RANKING, decreasing=TRUE), list(COUNTRYCODE, LONG.NAME.x, RANKING)][13]
MergedData[, mean(RANKING, na.rm = TRUE), by = INCOME.GROUP]
library(ggplot2)
MergedData2 <- MergedData[order(GDP, RANKING)]
ggplot(MergedData2, aes(x=RANKING,y=GDP))  +
ggplot(MergedData2, aes(x=RANKING,y=GDP))  +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
ggplot(MergedData2, aes(x=RANKING,y=GDP))  +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
ggplot(MergedData, aes(x=RANKING,y=GDP))  +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
ggplot(MergedData, aes(x=RANKING,y=GDP))  +
geom_bar(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
geom_bar(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
ggplot(MergedData, aes(x=RANKING,y=GDP))  +
geom_bar(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
ggplot(MergedData, aes(x=RANKING,y=GDP))  +
geom_bar(aes(colour=INCOME.GROUP), alpha = 0.3, size=3)
ggplot(MergedData, aes(x=RANKING,y=GDP))  +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.7, size=3)
ggplot(MergedData, aes(x=RANKING,y=GDP))  +
scale_y_log10() +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.7, size=3)
gdpsite <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdpsite, destfile = "./getdata%2Fdata%2FGDP.csv")
GDPdata <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232, stringsAsFactors = F))
GDPdata <- GDPdata[X!=""]
GDPdata <- GDPdata[, list(X, X.1, X.3, X.4)]
names(GDPdata) <- c("CountryCode", "ranking", "Long.Name", "GDP.Value")
str(GDPdata)
GDPdata$GDP <- as.numeric(gsub(",","", GDPdata$GDP))
str(GDPdata)
gdpsite <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdpsite, destfile = "./getdata%2Fdata%2FGDP.csv")
GDPdata <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232, stringsAsFactors = F))
GDPdata <- GDPdata[X!=""]
GDPdata <- GDPdata[, list(X, X.1, X.3, X.4)]
names(GDPdata) <- c("CountryCode", "ranking", "Long.Name", "GDP.Value")
str(GDPdata)
GDPdata$GDP <- as.numeric(gsub(",","", GDPdata$GDP.Value))
str(GDPdata)
gdpsite <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdpsite, destfile = "./getdata%2Fdata%2FGDP.csv")
GDPdata <- data.table(read.csv("getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 232, stringsAsFactors = F))
GDPdata <- GDPdata[X!=""]
GDPdata <- GDPdata[, list(X, X.1, X.3, X.4)]
names(GDPdata) <- c("CountryCode", "ranking", "Long.Name", "GDP.Value")
str(GDPdata)
GDPdata$GDP.Value <- as.numeric(gsub(",","", GDPdata$GDP.Value))
str(GDPdata)
names(GDPdata) <- toupper(names(GDPdata))
str(GDPdata)
GDPdata$RANKING <- as.numeric(GDPdata$RANKING)
missingRanking <- sum(is.na(GDPdata$RANKING))
missingRanking
site <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(site, destfile = "./getdata%2Fdata%2FEDSTATS_Country.csv")
Educationaldata <- read.csv("getdata%2Fdata%2FEDSTATS_Country.csv")
str(Educationaldata)
Educationalclean <- data.table(Educationaldata)
names(Educationalclean) <- toupper(names(Educationalclean))
Educationalclean$COUNTRYCODE <- as.character(Educationalclean$COUNTRYCODE)
Educationalclean$LONG.NAME<- as.character(Educationalclean$LONG.NAME)
str(Educationalclean)
MergedData <- merge(GDPdata, Educationalclean, all = TRUE, by=c("COUNTRYCODE"))
sum(!is.na(unique(MergedData$RANKING)))
MergedData[order(RANKING, decreasing=TRUE), list(COUNTRYCODE, LONG.NAME.x, RANKING)][13]
MergedData[, mean(RANKING, na.rm = TRUE), by = INCOME.GROUP]
ggplot(MergedData, aes(x=RANKING,y=GDP))  +
scale_y_log10() +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.7, size=3)
library(ggplot2)
ggplot(MergedData, aes(x=RANKING,y=GDP))  +
scale_y_log10() +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.7, size=3)
ggplot(MergedData, aes(x=RANKING,y=GDP.Value))  +
scale_y_log10() +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.7, size=3)
ggplot(MergedData, aes(x=RANKING,y=GDP.Value))  +
scale_y_log10() +
geom_point(aes(colour=INCOME.GROUP), alpha = 0.7, size=3)
library(ggplot2)
ggplot(MergedData, aes(x=RANKING,y=GDP.Value))  +
scale_y_log10() + geom_point(aes(colour=INCOME.GROUP), alpha = 0.7, size=3)
ggplot(MergedData, aes(x=RANKING,y=GDP.VALUE))  +
scale_y_log10() + geom_point(aes(colour=INCOME.GROUP), alpha = 0.7, size=3)
breaks <- quantile(MergedData$RANKING, probs = seq(0, 1, 0.2), na.rm = TRUE)
MergedData$quantileGDP <- cut(MergedData$Ranking, breaks = breaks)
str(MergedDat)
str(MergedData)
breaks <- quantile(MergedData$RANKING, probs = seq(0, 1, 0.2), na.rm = TRUE)
breaks
MergedData$quantileGDP <- cut(MergedData$Ranking, breaks = breaks)
class(breaks)
MergedData$quantileGDP <- cut(MergedData$Ranking, breaks = 5)
qtl <- cut(MergedData$Ranking, breaks = 5)
class(MergedData$RANKING)
breaks <- quantile(MergedData$RANKING, probs = seq(0, 1, 0.2), na.rm = TRUE)
qtl <- cut(MergedData$RANKING, breaks = 5)
table(qtl)
table(quatile)
quantile <- cut(MergedData$RANKING, breaks = 5)
table(quatile)
table(quantile)
table(MergedDATA$INCOME.GROUP, MergedData$QTLS)
table(MergedData$INCOME.GROUP, MergedData$QTLS)
breaks <- quantile(MergedData$RANKING, probs = seq(0, 1, 0.2), na.rm = TRUE)
QTLS <- cut(MergedData$RANKING, breaks = breaks)
table(QTLS)
table(MergedData$INCOME.GROUP, MergedData$QTLS)
MergedData$QTLS <- cut(MergedData$RANKING, breaks = breaks)
table(QTLS)
table(MergedData$INCOME.GROUP, MergedData$QTLS)
table(MergedData$QTLS)
View(GDPdata)
ggplot(MergedData, aes(x=RANKING,y=GDP.VALUE))  +
scale_y_log10() + geom_point(aes(colour=INCOME.GROUP), alpha = 0.7, size=3) +
ggtitle( "GDP [$ Millions] vs GDP Ranking") +
labs(x = "GDP Ranking", y = "Gross Domestic Product [$ Million USD]")
setwd("C:/Users/Brian/Desktop/SMU/MSDS-6306-Doing-Data-Science/CaseStudy1)
getwd()
knitr::opts_knit$set(root.dir="C:/Users/Brian/Desktop/SMU/MSDS-6306-Doing-Data-Science/CaseStudy1")
require(knitr)
source("C:/Users/Brian/Desktop/SMU/MSDS-6306-Doing-Data-Science/CaseStudy1/Analysis/Data/Gather1.R")
source("C:/Users/Brian/Desktop/SMU/MSDS-6306-Doing-Data-Science/CaseStudy1/Analysis/Data/Gather2.R")
## Merge Data
source("C:/Users/Brian/Desktop/SMU/MSDS-6306-Doing-Data-Science/CaseStudy1/Analysis/Data/MergeData.R")
View(MergedData)
# Chunk 1: setup
knitr::opts_knit$set(root.dir="C:/Users/Brian/Desktop/SMU/MSDS-6306-Doing-Data-Science/CaseStudy1")
# Chunk 2
require(knitr)
source("C:/Users/Brian/Desktop/SMU/MSDS-6306-Doing-Data-Science/CaseStudy1/Analysis/Data/Gather1.R")
source("C:/Users/Brian/Desktop/SMU/MSDS-6306-Doing-Data-Science/CaseStudy1/Analysis/Data/Gather2.R")
library("knitr", lib.loc="C:/Program Files/R/R-3.3.1/library")
## Creating a break vector cut ranking into 5 separate quantile groups
breaks <- quantile(MergedData$RANKING, probs = seq(0, 1, 0.2), na.rm = TRUE)
MergedData$QTLS <- cut(MergedData$RANKING, breaks = breaks)
## Previwing table with new QTLS
table(MergedData$QTLS)
## Final table comparing Quantiles and Income Groups
table(MergedData$INCOME.GROUP, MergedData$QTLS)
# Chunk 1: setup
knitr::opts_knit$set(root.dir="C:/Users/byu/Desktop/SMU/MSDS 6306 Doing Data Science/CaseStudy1")
# Chunk 2
library(knitr)
source("C:/Users/byu/Desktop/SMU/MSDS 6306 Doing Data Science/CaseStudy1/Analysis/Data/Gather1.R")
source("C:/Users/byu/Desktop/SMU/MSDS 6306 Doing Data Science/CaseStudy1/Analysis/Data/Gather2.R")
# Chunk 3
## Merge Data
source("C:/Users/byu/Desktop/SMU/MSDS 6306 Doing Data Science/CaseStudy1/Analysis/Data/MergeData.R")
# Chunk 4
sum(!is.na(unique(MergedData$RANKING)))
# Chunk 5
MergedData[order(RANKING, decreasing=TRUE), list(COUNTRYCODE, LONG.NAME.x, RANKING)][13]
# Chunk 6
MergedData[, mean(RANKING, na.rm = TRUE), by = INCOME.GROUP]
# Chunk 7
library(ggplot2)
ggplot(MergedData, aes(x=RANKING,y=GDP.VALUE))  +
scale_y_log10() + geom_point(aes(colour=INCOME.GROUP), alpha = 0.7, size=3) +
ggtitle( "GDP [$ Millions] vs GDP Ranking") +
labs(x = "GDP Ranking", y = "Gross Domestic Product [$ Million USD]")
